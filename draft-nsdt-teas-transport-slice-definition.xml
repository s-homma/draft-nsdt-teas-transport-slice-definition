<?xml version="1.0" encoding="US-ASCII"?>
<!--


<!DOCTYPE rfc SYSTEM "rfc2629.dtd" []>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
-->

<!-- test -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [ 
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced.  
     An alternate method (rfc include) is described in the references. --> 
<!--
<!ENTITY RFC7348 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7348.xml">
<!ENTITY RFC7665 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.7665.xml"> 
<!ENTITY RFC8300 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.8300.xml">
<!ENTITY I-D.draft-ietf-sfc-hierarchical SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-sfc-hierarchical-05.xml">
<!ENTITY I-D.draft-netslices-usecases SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-netslices-usecases-02.xml"> 
-->
<!--
<!ENTITY I-D.draft-qiang-coms-architecture SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-architecture-00.xml">
-->
<!--
<!ENTITY I-D.draft-qiang-coms-netslicing-information-model SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-netslicing-information-model-01.xml">
<!ENTITY I-D.draft-defoy-coms-subnet-interconnection SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-defoy-coms-subnet-interconnection-01.xml"> 
<!ENTITY I-D.draft-qiang-coms-netslicing-information-model SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-qiang-coms-netslicing-information-model-01.xml">
<!ENTITY I-D.draft-ietf-spring-segment-routing-mpls SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-spring-segment-routing-mpls-11.xml">
<!ENTITY I-D.draft-ietf-6man-segment-routing-header SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.draft-ietf-6man-segment-routing-header-08.xml">
-->
<!ENTITY I-D.draft-contreras-teas-slice-nbi SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-contreras-teas-slice-nbi-00.xml">
<!--<!ENTITY I-D.draft-homma-rtgwg-slice-gateway SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-homma-rtgwg-slice-gateway-01.xml">-->
<!ENTITY I-D.draft-ietf-teas-sf-aware-topo-model SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-teas-sf-aware-topo-model-04.xml">
<!ENTITY I-D.draft-ietf-teas-enhanced-vpn SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-teas-enhanced-vpn-04.xml">

]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?> 
<!-- used by XSLT processors --> 
<!-- For a complete list and description of processing instructions (PIs),  
      please see http://xml.resource.org/authoring/README.html. --> 
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use. 
     (Here they are set differently than their defaults in xml2rfc v1.32) --> 
<?rfc strict="yes" ?> 
<!-- give errors regarding ID-nits and DTD validation --> 
<!-- control the table of contents (ToC) --> 
<?rfc toc="yes"?> 
<!-- generate a ToC --> 
<?rfc tocdepth="4"?> 
<!-- the number of levels of subsections in ToC. default: 3 --> 
<!-- control references --> 
<?rfc symrefs="yes"?> 
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] --> 
<?rfc sortrefs="yes" ?> 
<!-- sort the reference entries alphabetically --> 
<!-- control vertical white space  
     (using these PIs as follows is recommended by the RFC Editor) --> 
<?rfc compact="yes" ?> 
<!-- do not start each main section on a new page --> 
<?rfc subcompact="no" ?> 
<!-- keep one blank line between list items --> 
<!-- end of list of popular I-D processing instructions --> 
<rfc category="info" docName="draft-rokui-transport-slice-definition-00">
  <!-- ***** FRONT MATTER ***** --> 


<!--test2-->

  <front>
    <title abbrev="draft-rokui-transport-slice-definition">
    IETF Definition of Transport Slice
    </title>

    <author fullname="Reza Rokui" initials="R." surname="Rokui">
      <organization>Nokia</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Canada</country>
        </postal>
        <email>reza.rokui@nokia.com</email>
      </address>
    </author>

    <author fullname="Shunsuke Homma" initials="S." surname="Homma">
      <organization abbrev="NTT">NTT</organization>

      <address>
        <postal>
          <street/>
          <city/>
          <region/>
          <code/>
          <country>Japan</country>
        </postal>
        <email>shunsuke.homma.fp@hco.ntt.co.jp</email>
      </address>
    </author>
    

    
    <author fullname="Kiran Makhijani" initials="K." surname="Makhijani">
      <organization abbrev="Futurewei">Futurewei</organization>
      
      <address>
        <postal>
          <street/>
          <city/>
          <country>USA</country>
        </postal>
        <email>kiranm@futurewei.com</email>
      </address>
    </author>

    <author fullname="Luis M. Contreras"
            initials="LM."
            surname="Contreras">
      <organization abbrev="Telefonica">
        Telefonica
      </organization>
      <address>
        <postal>
          <street></street>
          <street></street>
          <city></city>
          <code></code>
          <country>Spain</country>
        </postal>
        <email>luismiguel.contrerasmurillo@telefonica.com</email>
        <uri>http://lmcontreras.com/</uri>
      </address>
    </author>


    <date/>

    <area>rtg</area>

    <workgroup>teas</workgroup>
    
    <keyword>Internet-Draft</keyword>

    <abstract>
      <t>
		  This document describes the definition of a slice in the transport networks and its characteristics. The purpose 
		  here is to bring clarity and common understanding of the transport slice concept and describe 
		  here is to bring clarity and a common understanding of the transport slice concept and describe 
		  related terms and their meaning. It explains how transport slices can be used in end to end network slices, or independently.
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
	<!-- SH-28Jan:  modified the following text for  emphasizing  benefitial features of network slicing. -->
    	<t>
       Network slicing is a methodology to generically describe the logical partitioning of network resources  
       associated with a service or an application. Network slicing is expected to enable diverse 
       devices/applications that have different requirements on communication to coexist on the same network 
       efficiently. Also, a network slice sometimes traverses multiple domains, and generalized interfaces, 
       operations, and management would be important.  
       </t>

       <t>
       Some key applications which might benefit from the 
       use of network slicing include:
        <list style="symbols">
          <t>5G services (e.g. eMBB, URLLC, mMTC)(See <xref target="TS.23.501-3GPP"/>)</t>
          <t>Network wholesale</t>
          <t>Network infrastructure sharing among the operators</t>
          <t>NFV connectivity (Data Center Interconnect)</t>
        </list>
       </t>

     <t>
      A 'network slice' is composed of different endpoints, application logic and specific connectivity between them. 
      Transport slices are a part of the network slices that fulfill connection requirements between the endpoints. Transport slices 
      are created and managed within the scope of transport networks (e.g. IP, MPLS, optical). 
      </t>
      <t>
      This document provides a definition of a slice in the transport network (called "transport slice"), and describes its characteristics.
      </t>
    </section>

    <section title="Terms and Abbreviations">
     <t>The terms and abbreviations used in this document are listed below.
       <list style="symbols">
 <!--        <t>E2E network slice: End-to-End network slice</t>  -->
         <t>E2E NS: End to End Network Slice</t>
         <t>TS: Transport Slice</t>
	     <t>TSC: Transport Slice Controller</t>
			 <!-- <t>TNC: Transport Network Controller</t> -->
         <t>EP: Endpoint</t>
         <t>EU: End User</t>
         <t>NBI: North Bound Interface</t>
         <t>SBI: South Bound Interface</t>
 <!--        <t>NF: Network Function</t>
         <t>SF: Service Function</t> 
         <t>DPI: Deep Packet Inspection</t>
         <t>WAF: Web Application Firewall</t> -->
         <t>SLO: Service Level Objective</t>
         <t>SLA: Service Level Agreement</t>
         <t>B/W: Bandwidth</t>
         <t>MTBF: Mean Time Between Failures</t>
         <t>MTTR: Mean Time To Repair</t>
      </list>
     </t>
    <t>
	Author's notes: This list may be non-exhaustive. Also, a light explanation for each term would be required.  Or this section may be removed if it isn't needed.
    </t>     
    </section>


    <section title="High Level Description of End-to-End Network Slicing">

      <t>
        An end-to-end (E2E) network slice is a complete logical network that provides a service in its entirety with a specific 
        assurance to the customer. A transport slice concerns with those assurance aspects only within the transport networks.
        To illustrate the IETF definitions of both E2E network slice and transport slice, consider the network shown in <xref target="fig_E2E-NS"/>, 
        where a network operator has an E2E network slice that traverses multiple technology-specific networks. Each of these networks might use 
        any number of technologies, including but not limited to IP, MPLS, Fiber-Optics (e.g. WDM, DWDM), Passive Optical Networking (PON), Microwave, etc.
      </t>
      <t>
       Each of these networks includes multiple (physical or virtual) nodes and may also provide network functions beyond simply carrying of technology-specific 
       protocol data units. The types of nodes used in any of these networks may include:
      <list style="symbols">
        <t>Packet/frame processing nodes (e.g., Routers, Switches)</t>
        <t>Application servers</t>
        <t>Service Functions(e.g., Firewall, Loadbalancer)</t>
        <t>Radio Access Network (RAN) components</t>
        <t>Mobile Core components</t>
        <t>Microwave transceivers</t>
        <t>Optical repeaters</t>
        <t>etc.</t></list>
      </t>
      <t>
    Each network may support different technologies and an E2E network slice is a combination of these networks. As an example:
      <list style="symbols">
        <t>Network 1 might contain multiple 5G RAN nodes connected to a few Cell Site Gateways (CSG) routers. </t>
        <t>Network 2 might have one or more layer-3 routers and layer-2 switches which may run on top of an optical network.</t>
        <t>Network 3 might have a number of 5G RAN nodes connected to Passive Optical Network (PON) switches.</t>
        </list>
      </t>
      <figure anchor="fig_E2E-NS" title="E2E network slice">
        <artwork align="center"><![CDATA[
  
        <======================= E2E NS ======================>
        <-OS1-> <-TS1-> <-TS2-> <-OS2->   ...   <-TSn-> <-OSm->
       |------------------------------------------------------| 
       |    .--.             .--.                .--.         |
       |   (    )--.        (    )--.           (    )--.     |
       |   .'         '     .'         '        .'        '   |
[EU-x] |  (  Network-1  )  (  Network-2  ) ... (  Network-p ) |[EU-y]
       |   `-----------'    `-----------'       `----------'  |
       |                                                      |
       |                      Operator-z                      |
       |------------------------------------------------------|
Legend:
  E2E NS: End-to-end network slice
  TSn: Transport Slice n
  OSm: Other Slice m
  EU-x: End User-x
  EU-y: End User-y
    
  ]]></artwork>
      </figure>


      <t>
      Referring to <xref target="fig_E2E-NS"/>, when operator-z creates a specific E2E network slice, it may create 
      one or more of transport slices and other slices (application logic or other system functions).
      </t> 
      
      <t>
       Note:  defining the other slices is out-of-scope of the current work.
      </t>
      <t>
    To explain the concept of an E2E network slice, consider a network operator-z has various 
    customers. One of the customers needs an independent E2E logical network 
    for a service (e.g. CCTV, autonomous driving, HD map, etc.) with a specific network SLO requirement 
		e.g. a secure connection with an E2E latency less than 5ms, from End User-x (EU-x) to End User-y (EU-y). This 
		E2E logical network is called an "E2E network slice".  A typical example of EU-x maybe 
    a 5G user equipment such as an infotainment unit in a car, CCTV, or a car for autonomous driving, etc. and a 
    typical example of EU-y in 5G is 5G application server, IMS, etc.
      </t>
      <t>
    In <xref target="fig_E2E-NS"/>,  "E2E NS" shows the logical 
    network with requested SLO for EU-x to EU-y. It is important to consider that an "E2E network slice" is 
    associated with a customer and a specific service type (e.g. CCTV service, autonomous driving, etc.).
      </t>

      <t>
    As a concrete example, a customer "City of NY" would like to connect all its CCTV cameras for the entire city to one or more locations for viewing or collection. To this end, it requests local carrier - 'operator-z' in NY to create a new E2E network slice with a bandwidth no-less-than 10Mbps from each CCTV coverage area. In this case, a single E2E network slice will be created by the operator-z for the customer "City of NY", service type of CCTV and requested bandwidth connecting all the CCTV camera zones to one or more control-centers for the collection of video data.
      </t>
      <t>
    It may also be possible that more than one customer and/or service types are associated with an E2E network slice.
    
    For instance, an E2E network slice is associated with not only to service type CCTV 
    but another service "Public Safety", i.e. NS ID 10 is used for two services for "City of NY".
      </t>
    </section>


    <section title="Definition and Scope of Transport slice">
      <section title="Transport Slice Definition">

        <t>
    The basic definition of a transport slice is as follows:
      </t>
        <t>
"A transport slice is a logical network topology connecting a number of endpoints
and a set of shared or dedicated network resources, which
are used to satisfy  specific Service Level Objectives (SLO)".
</t>
        <t>
		Note: The term sub-slice or slice-subnet is used by many standard organizations 
		to refer to "Transport Slice" or "Other Slice" (i.e. transport sub-slice or transport slice-subnet).
		From the IETF point of view, these terms are all equivalent. We will use the term "slice" in this document (i.e. use transport slice)
       </t>
    
   
        <t>
	   SLOs are used to clearly describe different network resources associated with the service delivered and corresponding parameters necessary to realize the transport slice.
      </t>
        <t>
			Transport slice should be technology-agnostic, and the means for realization can be chosen 
			depending on several factors such as service requirements, specifications or capabilities 
			of underlying infrastructure. The structure and different characteristics of transport slices 
			are described in the following  sections.
       </t>
      </section>

      <section title="Transport Slice Structure">    
       <t>
        A transport slice has a set of connections and various endpoints to form a logical network. The goal is to achieve specific SLO for a customer 
        as shown in  <xref target="fig_Transport-NS"/>. The endpoints may be user equipment, any physical or virtual network functions (PNF/VNF), 
        or any network service for that matter. Similarly,  connections may be virtual or physical links of any type of technology.  
       </t>

      <figure anchor="fig_Transport-NS" title="Transport slice">
        <artwork align="center"><![CDATA[
  

             ____________________________
[EP11]------/                           /--[EP21]
           /                           /
[EP12]----/     Transport Slice       /----[EP22]
  :      /        (SLOs e.g.         /
  :     / B/W > x bps, Delay < y ms)/
[EP1m]-/___________________________/-------[EP2n]

== == == == == == == == == == == == == == == == == ==

           .--.               .--.        
[EP11]    (    )- .          (    )- .     [EP21]
         .'         '  SLO  .'         '  
[EP12]  (  Network-1 ) ... (  Network-p )  [EP22]   
 :       `-----------'      `-----------'     :
[EP1m]                                     [EP2n]

Legend
  SLOs in terms of attributes, e.g. BW, delay.
  EP: Endpoint
  B/W: Bandwidth

  ]]></artwork>
      </figure>    


      <t>
      <xref target="fig_Transport-NS"/> illustrates a case where a single transport 
      slice provides connectivity between any pair of endpoints with specific characteristics for SLO 
      (i.e., assuring B/W to at least x bps and transmission delay to be less than y ms).  
      The endpoints may be distributed in the underlay networks, and transport slice can be deployed across multiple 
      network domains. Also, the endpoints on the same transport slice may belong to the same address space. 
      </t>

      <t>
      As shown in <xref target="fig_E2E-NS"/>, an E2E network slice might have one or more of "Transport Slices" 
      and one or more of "Other Slices" of any combinations. The "Transport Slices" provides various connections with certain
      SLO between various endpoints whereas the transport slice realization addresses its implementation using various technologies.
      In short, the structure of a transport slice involves both definition and its realization.
      </t>

			<!--	
	<t> A "transport slice" addresses a set of technology-agnostic connections between various 
		endpoints with certain SLOs.  The managing entity or operating stakeholder of a transport slice is 
		called a Transport Slice Controller. 
    </t> 

   <t>
       Transport slice realization uses specific technologies in the operator's network.  
       The realization may require allocating appropriate resources into one or more networks and a mapping to transport slice. The managing entity realizing a transport slice is  
		referred to as the network controller. </t>
-->
   <t>
		A transport slice is built based on a request from a higher operations system.  The interface to higher operations 
		systems should be technology-agnostic, 
		and slice customers don't need to recognize concrete configurations based on the 
		technologies (e.g being more declarative than imperative). The request to instantiate a transport slice is represented with some indicators 
		such as SLO, and technologies are selected and managed accordingly.
    </t>

	<t>Furthermore, the structure of transport slices may be layered vertically or composed horizontally, i.e. operationally, 
			 a transport slice maybe decomposed in two or more transport slices which are then 
			independently realized and managed. This is further described in <xref target="Vertical-Concept"/>.</t>

	 	<section anchor="actors" title="Stakeholders">
			<t> A transport slice and its realization involves the following stakeholders and it is relevant 
				to define them for consistent terminology.
	   	<list style="hanging">
			<t hangText="Customer or User:">
				A customer is a user of network slice and hence a user of transport slice. Customers may request for 
				monitoring of associated resources or specific changes to them. A user may either directly manage its service by
				interfacing  with the transport slice controller or indirectly through an orchestrator. </t>
				<t hangText="Orchestrator:">
					An orchestrator is an entity that aggregates different services, resource and network requirements. It 
					interfaces on behalf of a user with the transport  slice controllers and hence a user of a transport slice. 
					Customers may request for monitoring of associated resources or specific changes to them. </t>
			<t hangText="Transport Slice Controller:">
				A transport slice operator (or slice operator for short) manages one or more transport slices for one or more customers 
				using a Transport Slice Controller (TSC). the TSC realizes the transport slice in the network,
				 maintains and monitors the run-time state of resources and topologies associated with it.
				A well-defined interface is needed between different types of transport slice controller and different types 
				of orchestrator. 
			</t>
			<t hangText="Transport Network Controller:">
				A transport network controller is a traditional network infrastructure 
				controller that offers network resources to TSC to be used for the realization of a particular 
				transport slice. These are existing network controllers for a specific technology to 
				realize transport slices in its network.</t>
		</list> </t>

		</section>
	 <section anchor="interfaces" title="Transport Slice Controller Interfaces">
		 
			 <t> To provide common means of provisioning, operating and monitoring the transport slices, interactions between 
					 different stakeholders should be clearly defined.  This happens in two parts with reference to 
					 the TSC (see <xref target="fig_interfaces"/>).

	   	<list style="hanging">
		 <t hangText="TSC Northbound Interface (NBI):">
			 The TSC Northbound Interface is a bidirectional and an asynchronous interface between a higher level system, e.g. 'E2E network slice orchestrator' 
			 and the 'Transport slice controller'.  It is a technology agnostic interface to generalize the deployment of different types 
			 of transport slices. Different network orchestrators can use the same NBI with the TSC. 
		 </t>
		 <t hangText="TSC Southbound Interface (SBI):">
			 The TSC Southbound interface is a bidirectional and an asynchronous interface between 'Transport slice controller' and network controller(s).
			 These interfaces are technology-specific and can utilize many of the existing data models such as L2SM, L3SM, VPN, etc. 
			 The TSC maintains mappings of network and connectivity resources allocated by one or more network controllers.
		 </t>

 		</list> 
        <figure anchor="fig_interfaces" title="Interface of Transport Slice Controller">
          <artwork align="center">
		<![CDATA[
        +------------------------------------------+
        |                Customer                  |
        +------------------------------------------+
                             A
                             |
                             V
        +------------------------------------------+
        |         A higher level system            |
        |   (e.g e2e network slice orchestrator)   |
        +------------------------------------------+
                             A
                             | TSC NBI
                             V
        +------------------------------------------+
        |         Transport Slice Controller       |
        +------------------------------------------+
                             A
                             | TSC SBI
                             V
        +------------------------------------------+
        |           Network Controller(s)          |
        +------------------------------------------+

    ]]></artwork>
        </figure>
        </t>
	  </section>
 <section title="Transport slice Realization">
	 <t>
	 Realization of a Transport Slice is a mapping of underlying infrastructure with its definition. It is technology specific entity that is created and maintained over southbound interfaces. The Network controller(s) export the connectivity and resource mappings to the TSC. The network controller abstracts the details of underlying resources from the TSC.
 </t> <t>
	 The realization may be achieved in the form of either physical or logical connectivity through VPNs, a variety of tunneling technologies such as segment routing, SFC, etc. Accordingly, endpoints may be realized as physical or logical service or network functions. 
 </t>
 
 </section>
      </section>
    </section>
	
    <section anchor="TS-Char" title="Transport Slice System Characteristics">

        <t> 
			The characteristics here describe the properties and main functionality related to different 
			components of a system that supports transport slices.
		</t> 
           
        <section title="Service Level Objectives on Transport Slice">
        <t> 
			A transport slice is defined in terms of several quantifiable objectives or SLOs. These objectives define a set of 
			what network resource parameters or values necessary to provide a service a given transport slice. SLOs need not concern 
			with 'how' will they get implemented or realized in the underlying networks. They may be defined along
		   the dimensions of operations (time, capacity, compute...), reliability and, availability attributes. A non-exhaustive 
		   list of characteristics types for transport slice is described below:
            <list style="symbols">
			<t>Guaranteed Bandwidth: assurance of minimum or range of the bandwidth requirement. Requested unidirectionally. <!--, however might be dependent on availability of the resource on the return path-->.</t>
			<t>Guaranteed Latency: maximum permissible network delay when transmitting between source and destination endpoints. Requested unidirectionally.
			   The latency is measured  in terms of network characteristics (excluding application level latency).
		    </t>
			<t>Minimal permissible jitter: packet delay variation (PDV) as defined by <xref target="RFC3393"/> 
                 is measured by the difference in the one-way delay between selected packets 
				 in a flow. Minimizing variations in the delay are important for real-time applications, therefore, jitter-prevention
				 parameter provide minimal permissible jitter expectations for a flow.
			 </t>
			<t>Packet loss rate: To specify permissible packet loss rate between two endpoints. For critical networks, 
				this number will be very close to zero.
			</t>
			<t>NF resources: The endpoints in <xref target="endpvar"/> performance depend on resource allocated to 
			    those functions and can be specified in terms of compute, memory and access control objectives points. 
			 </t>
			<t> Availability: concerns with how quickly network becomes available after a fault. The requirements are 
				 specified through Meant time between failures (MTBF), and Mean time to repair (MTTR) to acquire availability metrics.
			</t>
			<t>Resource redundancy: represents reliability attributes in which a backup or duplicate resources such as 
				 path (same SLOs - latency, bandwidth, etc.), network functions (same compute, memory, etc.) 
				 To meet no packet loss objective, packet replication maybe necessary to guarantee that atleast packets 
				 from one path was achieved. However, we should consider this as 'how' aspect of objective and not 'what'.
			 </t>
			 <t>Security: The objective of securing a transport slice concern with three attributes:
				 a) end-to-end encryption between source and destination endpoints, this can be seen as the logical link between 
				 source and destination end points requiring encryption, b) Authentication and access control (ACLs) objectives 
				 to permit data on this transport slice, c) Isolation, is also a characteristic of security, to prevent interference 
				 between two or more slices or other flows on the same infrastructure. Isolation is implied by the definition of 
				 transport slice itself (logical partitioning...).
		     </t>
             <t>etc.</t>

            </list>
			The framework may further specify mechanisms for the performance, assurance and monitoring of these objectives.
           </t>
           <t>
			Note: Additional objectives may be necessary to capture, such as specifying  
			well defined paths or domains that a slice may transit through. A transport slice 
			will carry multiple flows between the 2 endpoints, therefore objectives should also 
			say if they are aggregates or on per flow basis and in such case to be specific enough for the system to be able to identify these specifics (subset of flows).</t>
		   <t> Further description  of a set of measurable attributes is captured in <xref target="I-D.contreras-teas-slice-nbi"/>. 
           </t>
		   <t> 
			  SLA vs SLO discussion: In defining transport slices, the term  SLO instead of SLA is used even though SLAs are more commonly
			  used term by the operators. SLOs are definitive and measurable parameters associated with a
			  service, therefore, network resource and connectivity requirements are defined accurately. In contrast,  
			   service level agreements represent contracts for a service between a service provider 
			   and a service consumer (or subscriber). Providers then translate SLA into SLO; these translations vary from 
			   one service provider to the other. 
			  Therefore, all through within the scope of transport slices term SLO will be used. 
		   </t>

        <section title="Isolation discussion"> 
		   <t> 
			   Slice isolation means that the behavior and performance of one transport slice does not impact other slices running 
			   over the same underlying infrastructure or logically shared network resources. When the shared resource pools begin to 
			   become saturated, SLO violations can happen, impacting the performance or operation of service associated with the transport slice. Since the transport slices are 
				 logically partitioned over the shared resources, a certain degree of isolation is expected. The degree of isolation can be derived from availability characteristics requested.
				 </t>
				 <t>
				 When realizing a transport slice, 
			   the network controller should be responsible for allocating and providing resources isolation as requested to that slice.
	But we have also said that the network controllers need not  understand the transport slice concept. It maybe simply
	fulfilling the resource request from the upper layer entity without knowing 
				it is realizing a transport slice with strict SLOs. 
	In that case, it may become necessary for a TSC to explicitly ask for isolation 
				to prevent any SLO violations.</t> 
			   
				 <t> SLO violations can occur for two reasons and corresponding statements apply 
			   <list style="symbols"> 
				<t>
				Shared resource interference: i.e. multiple transport slices simultaneously share the same resource, and 
				one of them consume the resource in surplus. If the SLO guarantees are strictly required, then the network controller can be informed about 
				the requirement using hard- or soft- type of isolations (the terms hard- and soft- isolation are reused from 
				<xref target="I-D.ietf-teas-enhanced-vpn"/>).
			  <list style="symbols"> 
				<t> Hard isolation: an SLO for a transport slice is always guaranteed. The network controller will strictly dedicate resource to the transport slice (i.e. it will not be shared). </t>
				<t> Soft isolation: an SLO violation for a transport slice may happen due to resource interference. In such cases,
					the transport slice's resource usage will be maintained by the controller within a certain tolerance
					level of that objectective.</t>
            </list>
				  </t>
				   <t> Resource failure or fault occurs.
			      <list style="symbols"> 
				    <t> Restoration isolation: the network is not impacted for a period longer than the given time. For example, 
						failover or the service restoration takes no longer than  
						some number of seconds. This is specified by Availability  SLO.</t>
				    <t> Protection isolation: the network path is protected with specified backup path. 
						This is specified by Availability  SLO. </t>
            	  </list>
			 	  </t>
             </list>
			</t>
			<t>Now, the question to resolve at design is whether hard or soft parameters be associated with each SLO individually 
				or is a characteristic of an entire transport slice.</t>
			<t> Author's Note: This discussion is deferred to the framework document. 
			</t>
			<t>We consider fault-related isolations as part of the specification in SLOs.</t>
        </section>

        </section>


        <section anchor="endpvar" title="Endpoint Variation"> 
			<t> 
				Transport slice endpoints are the terminating or originating nodes requiring connectivity 
				with specific SLO. Endpoints may be devices or functions. 
	</t>
        <section title="Types of Endpoints"> 
			<t>
				There are two types of endpoints based on the functions they perform.
		   <list style="hanging">
			<t hangText="Transport type EP:">
			This type of end point performs forwarding customer payload without any modification. E.g. routers, switches.
			</t>
			<t hangText="Service type EP:">
				This type of endpoint manipulates, processes or modifies the user data payload (based on policies). A 
				non-exhaustive list of service functions includes: firewalls, WAN and application acceleration, 
				Deep Packet Inspection (DPI), server load balancers, NAT44 [RFC3022], NAT64 [RFC6146], HTTP header 
				enrichment functions, and TCP optimizers.  The generic term "L4-L7 services" is often used to 
				describe such service functions (SFs).
        
			</t>
		</list>

	    </t>
		<t>  
		This document leverages the term Network Function (NF) to represent both types of endpoints in 
		<xref target="I-D.ietf-teas-sf-aware-topo-model"/>. 
		</t>
		</section>

        <section title="Connectivity Patterns"> 
		<t>
		 Endpoints may be connected point to point (P2P), point to multipoint (P2MP), multi-point to point (MP2P), or multi-point to multi-point (MP2MP) based 
         on the topology requested by the customer.
		   <list style="hanging">
			<t hangText="P2P pattern: ">
			P2P type of connections are between 2 endpoints like a pseudowire, or a logical link. The interconnections
				must represent the SLOs as requested by the customer.
			</t>
			<t hangText="P2MP/MP2P/MP2MP patterns: ">
				P2MP/MP2P/MP2MP type connections will interconnect two or more endpoints together (one to many, 
				many to one, many to many), representing an abstract
				topology or graph. When describing P2MP/MP2P/MP2MP scenarios it should be possible for each logical link to have 
				different SLO than the other link in the same graph. <!-- Typical SLO definitions here are point2cloud-->
			</t>
		</list>
	    </t>
       </section>
       </section>
 
        
        <section anchor="Vertical-Concept" title="Vertical Transport Slice">
        <t>
			Transport slice may follow a hierarchical relationship that would provide a vertical structure to it. This is used 
			for  building multi-layer slices in which each layer provides an abstraction, as well as an independent 
			monitoring, performance, control and management of the resources. 
			The vertical transport slice characteristic maybe used in 2 forms:
			<list style="symbols">
			  <t> The Transport slice itself where it represents a hierarchy of abstracted transport slices. In this case, realization 
				  will be done just once with a particular technology.  Thus, the lowest transport slice in the hierarchy that 
				  can not be decomposed further will be one to one mapping to its instance of realized transport slice.</t>
			  <t> Each layer (physical, datalink, or IP) has its own set of resources that  can be provided to the upper layer as 
				  a transport slice. Thus, transport slice at one layer is used by the layer above. This type of 
				  multi-layer vertical 
				 transport slice associates resources at different layers. For example, an IP transport slice
				 would utilize one or more optical transport slice.  In this case, realization 
				will be done for  a particular technology at that particular layer. Thus, the lowest transport slice in this type of hierarchy that 
				can not be decomposed further will be an instance of realized physical layer transport slice.</t>
			</list>				
       
        </t>
        
        <figure anchor="fig_HNS" title="Transport Slice Vertical and Horizontal Composition">
          <artwork align="center">
		<![CDATA[
         <======================== TS1 ========================>
         <=====TS11=======>  <==============TS12===============>
                             <====TS121====>  <=====TS122======>
             .--.             .--.                .--.         
            (    )--.        (    )--.           (    )--.     
            .'         '     .'         '        .'        '   
  [EU-x]   (  Network-1  )  (  Network-2  ) ... (  Network-3 )  [EU-y]
            `-----------'    `-----------'       `----------' 
         |                |                                   |
         |   Operator-y   |           Operator-z              |
         
  Legend:
    TSnnn: Level 3 vertical transport slice nnn
    TSnn:  Level 2 vertical transport slice nn
    TSn:   Level 1 transport Slice n
    ]]></artwork>
        </figure>	
        <t><xref target="fig_HNS"/> shows the transport slice hierarchy. Slices TS11 and TS12 are composed together to form TS1 that is the top level transport slice definition, TS121 and TS122 collectively define TS12. The SLO for bandwidth guarantee will be shared and latency guarantee will be split into latency in networks 2 and 3. To emphasize the hierarchical structure, consider Network-2 and Network-3 are in the same administrative domain but use different transport technologies SR and L2VPN respectively. Then instead of presenting 2 transport slices, Operator-z can expose only one transport slice TS12 abstracting the underlying transport technology details.
		<list style="empty">
		  <t> Note: The specification to connect TS121 and TS122 are similar to those connecting TS12 and TS11.</t>
		</list>		   
      </t>
	
      </section>
      <section title="Horizontal Composition of Transport slice">
	<t> In contrast, horizontal transport slices enable the composition of multiple realized transport slices. Since transport slices 
		are not necessarily a single  encapsulation tunnel and may traverse through different data planes, each realized transport slice will require 
		a stitching, interworking or mapping function. These stitching functions can be viewed as a type of intermediate network function endpoints. 
		For instance in <xref target="fig_HNS"/>, TS11 and TS12 are horizontal transport slices. If we assume that TS11 is an L2 tunnel and TS12 is an SRV6 based path, then a 'Service type EP' (not shown in the figure) is needed for translation.
    </t>
    <t>
	Author's notes: This  service type EP is  a new type of transport slice specific service function. We may call it transport slice
	gateway.  
    </t>

    </section>

    </section>


	 
    <section title="Security Considerations">
    <t>
    TBD
    </t>
    </section>
    
    <section title="IANA Considerations">
    <t>
    This memo includes no request to IANA.
    </t>
    </section>
    
    <section title="Acknowledgment">
    <t>
    The entire TEAS NS design team and everyone participating in those discussion has contributed to this draft.
    </t>
    </section>
    

  </middle>

  <!-- ***** BACK MATTER ***** -->

  <back>
    <references title="Informative References">
    &I-D.draft-contreras-teas-slice-nbi;
<!-- &I-D.draft-homma-rtgwg-slice-gateway;-->
    &I-D.draft-ietf-teas-sf-aware-topo-model;
    &I-D.draft-ietf-teas-enhanced-vpn;
<!--
      <?rfc include="refs.RFC3393"?>
      <?rfc include="reference.RFC.7665"?>
      
      <?rfc include="reference.RFC.8300"?>>
      
      <?i-d include="reference.I-D.netslices-usecases"?>
      
      <?i-d include="reference.I-D.defoy-coms-subnet-interconnection"?>
      
      <?i-d include="reference.I-D.qiang-coms-netslicing-information-model"?>>

    &RFC7348;
    &RFC7665;
    &RFC8300;
    &I-D.draft-netslices-usecases;
    &I-D.draft-qiang-coms-netslicing-information-model;
    &I-D.draft-qiang-coms-architecture;
    &I-D.draft-ietf-spring-segment-routing-mpls;
    &I-D.draft-ietf-6man-segment-routing-header;
    &I-D.draft-ietf-sfc-hierarchical;
    &I-D.draft-defoy-coms-subnet-interconnection;
-->  
 <!--     
      <reference anchor='NFV-Architectural-Framework'
       target='http://www.etsi.org/deliver/etsi_gs/NFV/001_099/002/01.02.01_60/gs_NFV002v010201p.pdf'>
        <front>
        <title>Network Functions Virtualisation (NFV); Architectural Framework</title>
        <author>
        <organization>
        Network Functions Virtualisation (NFV) ETSI Industry Specification Group (ISG)
        </organization>
        </author>
        <date month="December" year="2014"/>
        </front>
      </reference>
      
      <reference anchor='OSM-White-Paper'
       target='https://osm.etsi.org/images/OSM-Whitepaper-TechContent-ReleaseONE-FINAL.pdf'>
        <front>
        <title>OSM White Paper</title>
        <author>
        <organization>ETSI</organization>
        </author>
        <date month="October" year="2016"/>
        </front>
      </reference>
      
      <reference anchor='TS.36.300-3GPP'
       target='http://www.qtc.jp/3GPP/Specs/36300-830.pdf'>
        <front>
        <title>3GPP TS 36.300</title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="December" year="2007"/>
        </front>
      </reference>

      <reference anchor='Slicing_Tutrial'
       target='http://netsoft2018.ieee-netsoft.org/program/tutorials/; http://discovery.ucl.ac.uk/10051374/'>
        <front>
        <title>Network Slicing Landscape- Tutorial</title>
        <author>
        <organization>
        IEEE NetSoft2018
        </organization>
        </author>
        <date month="June" year="2018"/>
        </front>
      </reference>

      <reference anchor='NECOS'
       target='hhttp://www.h2020-necos.eu'>
        <front>
        <title>Novel Enablers for Cloud Slicing</title>
        <author>
        <organization>
        NECOS
        </organization>
        </author>
        <date/>
        </front>
      </reference>
-->
      <reference anchor='TS.23.501-3GPP'  target="http://www.3gpp.org/ftp//Specs/archive/23_series/23.501/23501-g20.zip">
        <front>
        <title>3GPP TS 23.501 (V16.2.0): System Architecture for the 5G System (5GS); Stage 2 (Release 16)
        </title>
        <author>
        <organization>
        3rd Generation Partnership Project (3GPP)
        </organization>
        </author>
        <date month="September" year="2019"/>
        </front>
      </reference>

	  <reference anchor="RFC3393" target="https://www.rfc-editor.org/info/rfc3393">
      <front>
      <title>
      IP Packet Delay Variation Metric for IP Performance Metrics (IPPM)
      </title>
      <author initials="C." surname="Demichelis" fullname="C. Demichelis">
      <organization/>
      </author>
      <author initials="P." surname="Chimento" fullname="P. Chimento">
      <organization/>
      </author>
      <date year="2002" month="November"/>
      </front>
      <seriesInfo name="RFC" value="3393"/>
      <seriesInfo name="DOI" value="10.17487/RFC3393"/>
      </reference>

    </references>

  
  </back>
</rfc>
